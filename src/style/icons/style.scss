@import "variables";

@font-face {
  font-family: '#{$icomoon-font-family}';
  src:  url('#{$icomoon-font-path}/#{$icomoon-font-family}.eot?fpnm34');
  src:  url('#{$icomoon-font-path}/#{$icomoon-font-family}.eot?fpnm34#iefix') format('embedded-opentype'),
    url('#{$icomoon-font-path}/#{$icomoon-font-family}.ttf?fpnm34') format('truetype'),
    url('#{$icomoon-font-path}/#{$icomoon-font-family}.woff?fpnm34') format('woff'),
    url('#{$icomoon-font-path}/#{$icomoon-font-family}.svg?fpnm34##{$icomoon-font-family}') format('svg');
  font-weight: normal;
  font-style: normal;
  font-display: block;
}

.hs-icon {
  /* use !important to prevent issues with browser extensions that change fonts */
  font-family: '#{$icomoon-font-family}' !important;
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;

  /* Better Font Rendering =========== */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.hs-podcast {
  &:before {
    content: $hs-podcast; 
  }
}
.hs-tag {
  &:before {
    content: $hs-tag; 
  }
}
.hs-location {
  &:before {
    content: $hs-location; 
  }
}
.hs-duration {
  &:before {
    content: $hs-duration; 
  }
}
.hs-comment {
  &:before {
    content: $hs-comment; 
  }
}
.hs-trip {
  &:before {
    content: $hs-trip; 
  }
}
.hs-watched {
  &:before {
    content: $hs-watched; 
  }
}

